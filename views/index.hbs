<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8" />

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@300;400;600;700;900&display=swap" rel="stylesheet">
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
  <script src="https://cdn.socket.io/4.0.1/socket.io.min.js"></script>
  <title>Meu Webhook Favorito</title>
</head>

<body>
  <div id="app">
    <header id="header">
      <div class="logo">
        <img src="/webhook-icon.png" alt="icone tallos" height="30"/>
        <span>Meu Webhook Favorito</span>
      </div>
    </header>

    <main id="main">
      <section class="main-top">
        <div class="urls">
          <div class="input-group mb-3">
            <span class="input-group-text label-input">Redicerionar</span>
            <input class="form-control" type="text" placeholder="Informe sua URL de callback aqui..." onChange="saveRedirectUrl()" id="redirectURL">
          </div>

          <div class="input-group mb-3">
            <button class="btn btn-outline-secondary" type="button" onclick="copyToClipboard()" id="liveToastBtn"><i data-lucide="copy"></i></button>
            <input id="url-link" type="text" class="form-control" disabled placeholder="" aria-label="Example text with button addon" aria-describedby="button-addon1">
          </div>
        </div>
        <div class="infos">
          teste
        </div>
      </section>

      <div class="main-requests">
        <aside>
          <div class="actions">
            <div class="form-check form-switch">
              <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
              <label class="form-check-label" for="flexSwitchCheckDefault">Auto redirect</label>
            </div>
            <button onclick="clearData()" class="del-request">
              <i data-lucide="trash-2"></i>
              <span>Limpar</span>
            </button>

            <button onclick="reloadPage()" class="ref-request">
              <i data-lucide="folder-sync"></i>
              <span>Atualizar</span>
            </button>
          </div>
          <div class="list-all-request">
            {{#requests}}
            <div class="list-requests">
              <div class=" info-request-list">
                <span class="method">{{method}}</span>
                <span>{{date}}</span>
              </div>

              <div class="info-request-list">
                <button onclick="handleRequest('{{method}}', '{{path}}', '{{query}}', '{{body}}', '{{headers}}')">
                  <i data-lucide="external-link"></i>
                  <span>Redicerionar</span>
                </button>
                <button onclick="showRawData('{{method}}', '{{path}}', '{{query}}', '{{body}}', '{{headers}}')">
                  <i data-lucide="eye"></i>
                  <span>Raw</span>
                </button>
              </div>
            </div>
            {{/requests}}
          </div>
        </aside>

        <div class="details-request">
          <div id="raw-request">
            <pre id="req-data" class="data-request" />
          </div>
        </div>
      </div>
    </main>
  </div>
</body>



</html>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="https://cdn.socket.io/4.0.1/socket.io.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>
<script src="https://unpkg.com/lucide@latest"></script>
<script>
  lucide.createIcons();
  const [urlPath, webhookPathId] = window.location.pathname.split('/app')
  const url = window.location.origin + urlPath

  document.getElementById('redirectURL').value = localStorage.getItem('redirectURL')
  document.getElementById('url-link').value = `${url}/webhook${webhookPathId}/`

  document.addEventListener('DOMContentLoaded', () => {
    const socket = io();    

    // Configurar o listener para o evento 'newRequest'
    socket.on('newRequest', (data) => {
      Toastify({
        text: "Chegou uma request nova",
        duration: 2000,
        style: {
          background: "#3c3c3c",
          borderRadius: "5px"
        },
      }).showToast();
      console.log(data.method, data.path, data.query, data.body, data.headers)
      handleRequest(data.method, data.path, data.query, data.body, data.headers)
    });
  });


  function convertJSONToString(data) {
    try {
      return JSON.stringify(data);
    } catch (e) {
      return data;
    }
  }
  function parseObjectPropToString(obj) {
    const data = JSON.parse(obj)
    for (const key in data) {
      if (typeof data[key] === 'object')
        data[key] = convertJSONToString(data[key]);
    }

    return data;
  }
  function reloadPage() {
    window.location.reload()
  }

  function saveRedirectUrl() {
    const redirectURL = document.getElementById('redirectURL').value
    localStorage.setItem('redirectURL', redirectURL)
  }

  function handleRequest(method, path, query, body, headers) {
    const redirectURL = `${localStorage.getItem('redirectURL')}${path}`;
    const requestURL = new URL(redirectURL)
    requestURL.search = new URLSearchParams(JSON.parse(query)).toString()

    const request = new Request(requestURL.toString(), {
      method,
      body: ['post', 'put'].includes(method.toLowerCase()) ? body : undefined,
      headers: parseObjectPropToString(headers),
    });
    fetch(request)
      .then((data) => {
      })
      .catch(console.error);
  }

  function showRawData(method, path, query, body, headers) {
    function parseAllObjectsToJSON(data) {
      try {
        const obj = JSON.parse(data);

        for (const key in obj) {
          obj[key] = parseAllObjectsToJSON(obj[key]);
        }

        return obj;
      } catch (e) {
        return data;
      }
    }

    const data = {
      method,
      path,
      query: parseAllObjectsToJSON(query),
      body: parseAllObjectsToJSON(body),
      headers: parseAllObjectsToJSON(headers),
    }
    document.getElementById('req-data').innerHTML = JSON.stringify(data, null, 4)
  }

  function copyToClipboard() {
    Toastify({
      text: "Copiado para área de transferência",
      duration: 2000,
      style: {
        background: "#3c3c3c",
        borderRadius: "5px"
      },
    }).showToast();
    const url = document.getElementById('url-link').value
    navigator.clipboard.writeText(url)
  }

  function clearData() {
    fetch(`${url}/webhook${webhookPathId}/clear`)
      .then(reloadPage)
      .catch(console.error);
  }

</script>

<style>
 * {
  font-family: 'Nunito', sans-serif;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  scrollbar-color: #3c3c3c #f1f1f1;
  scrollbar-width: thin;
}

body {
  background-color: #b5b5b5;
}

button {
  background-color: transparent;
  border: none;
  outline: none;
  cursor: pointer;

  display: flex;
  align-items: center;
  gap: 0.5rem;

  color: white;
}

button:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

#header {
  display: flex;
  align-items: center;
  justify-content: space-between;

  padding: 0.6rem 1rem;

  background-color: #3c3c3c;
  color: white;
}

.logo {
  display: flex;
  align-items: center;
  gap: 0.5rem;

  font-size: large;
  font-weight: bold;
}

.actions {
  display: flex;
  align-items: center;
  justify-content: end;
  gap: 10px;
}

#main {
  margin-top: 0.8rem;
}

.main-top {
  width: 100%;
  display: flex;
  justify-content: space-between;
  padding: 5px 10px;
  color: black;
}

.main-top .urls {
  width: 48%;
}
.main-top .infos {
  width: 48%;
  background-color: #ffffff;
}

.main-top .label-input {
  background-color: #3c3c3c;
  border: none;
  color: #ffffff;
  font-weight: 700;
}
.main-top .btn {
  background-color: #3c3c3c;
  border: none;
  color: #ffffff;
  font-weight: 700;
}

.redirect {
  height: 1.2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.redirect span {
  font-weight: bold;
  color: #146C94;
  text-decoration: underline;
  text-underline-offset: 0.3rem;
}

.my-link {
  display: flex;
  align-items: center;
}
.my-link  .icon {
  margin: 10px;
}
.my-link > span, a {
  background-color: red;
}

.my-link a {
  text-decoration: none;
  color: #19A7CE;
  font-weight: 700;
  outline: none;
}

.my-link span {
  font-weight: bold;
  color: #146C94;
  text-decoration: underline;
  text-underline-offset: 0.3rem;
}

.redirect input {
  width: 580px;
  height: 2.5rem;
  padding: 0.5rem;

  border: none;
  border-radius: 0.5rem;

  outline: none;
}

.del-request {
  color: #ffffff;
  font-weight: 600;
  background-color: #ce3126;
  padding: 6px 10px;
  border-radius: 5px;
  transition: all 0.3s;
}

.ref-request {
  color: #ffffff;
  font-weight: 600;
  background-color: #19A7CE;
  padding: 6px 10px;
  border-radius: 5px;
  transition: all 0.3s;
}

.del-request:hover, .ref-request:hover {
  scale: 1.1;
}

.main-requests {
  margin-top: 1rem;
  height: 100%;
  width: 100%;

  display: flex;
}

aside {
  min-width: 400px;
  max-width: 400px;
}

.list-all-request {
  height: 100%;
  height: calc(100dvh - 20rem);
  overflow-y: auto;

  margin-top: 1rem;
  padding: 0 10px;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

/* Para navegadores WebKit (Chrome, Safari) */
::-webkit-scrollbar {
  width: 12px; /* Largura da barra de rolagem */
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  background-color: #3c3c3c; /* Cor do "polegar" da barra de rolagem */
  border-radius: 6px; /* Borda do "polegar" da barra de rolagem */
}

/* Opcional: Estilizando a alça da barra de rolagem (barra de rolagem não clicável) */
::-webkit-scrollbar-track {
  background-color: #adadad; /* Cor da trilha da barra de rolagem */
}

.list-requests {
  height: fit-content;
  padding: 1rem;

  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: wrap;

  border-radius: 10px;
  background: #b5b5b5;
  box-shadow: inset 20px 20px 60px #9a9a9a,
              inset -20px -20px 60px #d0d0d0;
}

.list-requests button {
  display: flex;
  align-items: center;
  gap: 0.5rem;

  color: #3c3c3c;
  transition: all 0.2s ease-in-out;
}

.list-requests button:hover {
  color: #5a5a5a;
}

.info-request-list {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  gap: 0.5rem;

  color: black;
}

.method {
  font-size: 1rem;
  font-weight: bold;
  color: white;

  background-color: #146C94;
  width: fit-content;
  padding: 0.2rem 0.5rem;
  border-radius: 0.5rem;
}

.details-request {
  height: 100%;
  width: calc(100% - 420px);
  padding: 1rem;
  color: black;

  display: flex;
  flex-direction: column;
  gap: 1rem;

  border-radius: 0.4rem 0 0 0.4rem;
}

#raw-request {
  height: calc(100dvh - 20rem);
  max-height: max-content;

  padding: 0.6rem;
  overflow-y: auto;

  background: #22212c;
  font-weight: lighter;
  color: white;
  border-radius: 0.4rem;
}
</style>